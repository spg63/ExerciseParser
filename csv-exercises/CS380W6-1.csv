Timestamp,Email Address,ID,Your first and last name(s),"Assume that you are tiling a rectangular room. Imagine that you have been given a set of small rectangular tiles with different sizes that can be placed in the room. The problem is to find the places of tiles where no two tiles overlap. Give a precise formulation for this problem as constraint satisfaction problem (variables, domains, and constraints).",What would a constraint graph associated with your CSP look like? 
2/13/23 16:12,jzs25@drexel.edu,Jzs25,Jazz Sussman Moss,Variables: tile1….tilen Domains: (size1….sizen) Constraints: tile1 != tile2 where != refers to overlap.,All tiles connected to all neighboring tiles
2/13/23 16:15,rv424@drexel.edu,rv424,Richard Vo,Variables: All the tiles Domains: different sizes of tiles Constraints: If no tiles overlap,The graph will be binary and continuous. 
2/13/23 16:12,oc76@drexel.edu,oc76,Omri Chashper,Variables: Each Tile Type; Domain: Arrangement of Tiles Placed at any given state; Constraints: Neighbor Tiles cannot be of the same type (overlap),"Each node will be a tile, and it will be linked to it's surrounding tiles who should not be of the same tile type. Overall, it will look like a huge web of links among unique nodes."
2/13/23 16:15,ktc53@drexel.edu,KTC53,Kyle Cook,"Variables: Number of tiles, size of each tile, shape of each tile Domains: Width and height of room, x,y position of placed tiles Constraints: Must fit in the room, no overlapping shapes",tile_positions __ places_tile_positions AND tile_postions _ room_size
2/13/23 16:15,hlp54@drexel.edu,hlp54,Ken Pham,"variables: Tiles, domain: tile positions, constraint: tiles cannot overlap",nodes that represent tiles and a path that connects to nodes that can be adjacent to it
2/13/23 16:17,atb87@drexel.edu,atb87,Andrew Bui,"variables: tiles, domains: 2 coordinates of corners, constraints: check coordinates if they overlap",It would be represented by a coordinate grid. There would be numbers that can fill the coordinate grid. It would be a binary constraint graph with continuous variables.
2/13/23 16:17,jad553@drexel.edu,jad553,Joshua Derikito,"Variables: Each tile is represented by an object holding its top left (x,y) coordinate and its height and width Domains: x, y, w, h are numbers less than the total width and height of the room Constraints: a tile cannot be within another tile's (x,y) (x, y+height) (x+width, y) and (x, y + height)","Unsure, binary continuous variables"
2/13/23 16:17,nps47@drexel.edu,nps47,Nataniel Saadon,variables: discrete variable(tiles). domains: continues(size of space). constraints: binary(check if values overlap),It would look like a graph with connecting nodes.
2/13/23 16:18,atg65@drexel.edu,atg65,Azra Gallano,"Variables- tiles (continuous), Domains- room (finite), Constraints- no overlapping of tiles (binary)",The constraint graph for this CSP would show that sometimes there is not solution- there may be too many tiles to fit within the room
2/13/23 16:17,ji328@drexel.edu,ji328,Josephina Im,"variables: tiles of different sizes, domains: places of tiles, constraints: no two tiles overlap ","nodes would be tiles, arcs would be no two tiles overlapping"
2/13/23 16:18,hl633@drexel.edu,hl633,Hajun Lee,"Variables : Xi,j (where i corresponds to row number, j the column number). Domains : { The set of small rectangular tiles with different sizes}. Constraints: Implicit : For every i, j, the tile at Xi,j is only one (no overlap), Explicit : length of tile at position Xi,j is one",binary and continuous 
2/13/23 16:18,rmf323@drexel.edu,rmf323,reed fleming,"domain - room space, variable - tiles t_k, constraints - fitting inside the room / overlap",the tiles connected with the connections being side by side on the ground. 
2/13/23 16:19,ayw32@drexel.edu,ayw32,Alexander Wang,"Variables: Atile, Btile, Ctile, variable for each tile; Domains: {0,1} for if a tile overlaps or not; constraints: binary, tiles must not overlap",It would look like a graph with each tile acting as a node. as a constraint. as a node
2/13/23 16:19,cjb393@drexel.edu,cjb393,Chris Blank,"Variables - Px,y for each tile, which gives coordinate position of bottom-left corner of tile. Domains: for each tile, from (0,0) to (roomWidth - tileWidth, roomHeight - tileHeight). Constraints (Implicit): No tiles may overlap. Contraints (Explicit): for each pair of tiles A and B; B.posX >= A.posX + A.tileWidth, B.posY > A.posY + A.tileHeight,","Each tile is given a vertex. Each vertex is connected, and any two vertices cannot have positions which would overlap."
2/13/23 16:19,ig346@drexel.edu,ig346,Itay Goldfarb,"continuous variables (2 numbers tupled), binary constraint",paired variables
2/13/23 16:20,eas469@drexel.edu,eas469,Elyse Stuart,Variables: continuous space (graph); Domains: tiles denoted by diagonal coordinates; Constraints: tiles cannot overlap (outline rectangle in space and ensure rectangles do not overlap),idk
2/13/23 16:21,dvd42@drexel.edu,dvd42,Daniel Damiano,The variables are the different floor positions the tiles could take. The domain is the set of different shapes for the tiles and the constraint is the rule that no two tiles are allowed to overlap.,
2/13/23 16:21,ht377@drexel.edu,ht377,Harshil Thakur,"variables: area of each rectangle, how much area is left to cover    domains: Number of rectangles on the floor: continuous, infinite places where you can place the tiles    constraints: edges/corners of the rectangles cannot be equal (They cannot overlap with each other.) binary and continuous variables. ",
2/13/23 16:21,jtw72@drexel.edu,jtw72,Jonathan Wacker,"Variables: Xij referencing the corner of a rectangle, Domains: length, width, Constraints: check Xij, Xij + width, Xik, Xik + height",continuous binary
2/13/23 16:21,aia43@drexel.edu,aia43,Alisha Augustin,"Let x,y be binary variable that represents whether the tile i is placed in the position y in the room. The value of x,y is 1 if the tile i is placed in the position y, and 0 otherwise.  Domains: Each variable x,y has a domain of {0, 1}.  Constraints:  Tiles must fit in the room: For each tile i, the sum of its placements must be equal to 1 and can’t overlap",
2/13/23 16:33,jd3622@drexel.edu,jd3622,Jack Durgin,"the variables would be the tiles, the domains would be their locations, and the constraints would be that each pair of tiles cannot overlap","The constraint graph would look like a fully connected graph, where the connections would be constraints on the overlapping of tiles."
2/14/23 13:22,ajh395@drexel.edu,ajh395,Andrew Hagelthorn ,"The problem's variables are the tiles, identified by their sizes. The domain is the space we are in, quantified by its area. The constraints are that pieces placed together may create an uneven surface to fit properly against the wall.","Much like a coloring graph, the program will see if placing certain combinations of rectangular sides together creates a desired shape. If the desired shape is not possible after placing a brick, it will not do it."
2/14/23 13:27,ss5277@drexel.edu,ss5277,Srija Saha,"Variables: Tiles or more specifically, the vertices of the tiles, Domains: All the ways you can place a tile in the room, Constraints: No two tiles sould overlap","The graph starts with an empty room and with each addition of a node, a new tile is added to the room. This continues for all possible situations that satisfies the constraints."
2/14/23 13:30,dbc42@drexel.edu,dbc42,Deniz Cakiroglu,Variables: size of the tiles(the vertices); Domain: the shape and size of the floor; Constraints: the way and spots tiles can be placed,The different tile sizes are the nodes and as you place you can continue with leftover tiles as children
2/14/23 13:25,nikhil.solanki@drexel.edu,ns3335,Nikhil Solanki,"Variables: X_ij (i,j, are row/col of grid; which represents an individual square in the grid of the rectangular room). Domain: respective small rectangular tiles (diff sizes). Constraints: no tiles can overlap (depending on which tile, which can be assigned unique variables, are equal to each other/have the same grid position when they cannot).","The graph can be created such that tiles are individual nodes, and they are connected with edges to tiles that are allowed to be placed next to each other (based on size/index)."
2/14/23 13:26,ffk23@drexel.edu,ffk23,Fawzia Khan,"Variables: There should be one variable for each tile.  This will represent the position and orientation of the title in the room.  Domains: It is the set of all possible positions adn orientations that the tile can take without overlapping with any other tile, for each variable.   Constraints:  Non-overlapping:Two tiles cannot overlap.  Bounds Constraint: The tiles must lie within the bounds of the room.","The constraint graph for the CSP would have one node for each tile, and an edge between two nodes if the corresponding tiles have a constraint on thier placement. It would have N nodes, where N is the number of tiles, and N*(N-1)/2 edges."
2/14/23 13:28,sk3939@drexel.edu,sk3939,Sahil Khanna,"Variables:  For each tile, we have a variable representing its position (x, y) in the room. Domains:  Each variable has a domain that consists of all valid positions for the tile such that it does not overlap with any other tile and remains within the bounds of the room. Constraints:  For any two tiles, the constraints state that they should not overlap with each other. This can be enforced by ensuring that the distance between the centers of the two tiles is greater than the sum of their respective lengths/widths. Additionally, we need to ensure that each tile is placed entirely within the room, which can be enforced by ensuring that its coordinates fall within the bounds of the room.","The constraint graph associated with this CSP would be an undirected graph, where each variable represents a node in the graph. The edges between nodes represent the constraints between the corresponding variables.  In this case, each tile variable is connected to all other tile variables, since we need to check the overlap constraints between all pairs of tiles. Thus, the graph is fully connected.  The constraints can be represented by labeling the edges with the corresponding constraint, such as ""non-overlapping"" or ""within room bounds"". Therefore, the constraint graph will be a fully connected graph where each edge will be labeled with the relevant constraint."
2/14/23 13:28,sss396@drexel.edu,sss396,Samprati Sinha,"Variables: (x,y) of the corners of each tile; Domain: all possible (x,y); Constraints: (x, y) such that either all x values of the one tile is greater than the largest x of the other tile or less than the smallest of the other tile, similar for y values and combinations of x and y values ",continuous 
2/14/23 13:28,bns49@drexel.edu,bns49,Badrudin Sheikh,variables = are the X_ij where i and j the coordinates of the rectangular floor. Domains = the set of the small rectangular tiles with different sizes. Constraints = no two adjacent areas of the floor have the same rectangular tile of the same size. ,Nodes are the tiles and edges are the location coordinates
2/14/23 13:29,wc495@drexel.edu,wc495,Weijie Chen,"Variables: set of rectangular tiles with different sizes, Domain: the position/places of each tile,Constraints: No overlapping tiles",2D grid of different placements of tiles with different size
2/14/23 13:29,kmc574@drexel.edu,kmc574,Kristen Craft,"Constraints: the rectangluar room dimensions, the size of the tiles. Variables: tile size; the 4 verticies of the tile.",A graph of which seqeucnes of tiles fill a given area in the rectangular room with no overlap.
2/14/23 13:29,xf49@drexel.edu,xf49,Xiao Fang,"Assume we have n tiles and use all of them. Variables: the positions of each tiles. Domains: any positions on the floor of the given room. Constraints: Given any two tiles T1, T2, T1 should not overlap T2.",A fully connected undirected network
2/14/23 13:29,vnt24@drexel.edu,vnt24,Vishal Tailor,"Vars:  Xi,j -where in the room the tile is  4 vertices per tile  Domains: set of all tiles and the orientations   Constraints: no 2 tiles can overlap each tile has to fit in the room",Graph:  One note for every variables that represents where in the room the tile is. The edge represent the tiles that overlap.
2/14/23 13:29,ml3653@drexel.edu,ml3653,Michael Le,The variable would be the rectangular tiles with different sizes and the domain would be the rectangular room itself that holds the tiles and the constraint would be area where tiles are overlapping. Represent variables as a set of four vertices. Constraint is that no two tiles overlap as mentioned.,Any tiles that overlap or intersect with each other would be the constraint and to identify it would be to mark the area of the overlapping tiles in red so that it can be easily identifiable.
2/14/23 13:29,dsb89@drexel.edu,dsb89,Devin S. Bucak,"Tile vertices, domains: x and y value of a vertex, constraints: no tile vertices can be within the box created by other vertices",constrains connect literally every variable to all others not in the same rectangle? Or maybe a constraint between each vertex and each set of rect vertices? lffjdsndfsk
2/14/23 13:29,rm3552@drexel.edu,rm3552,Raunaq Malhotra,Variables: tile to be placed ; Domain: location where each tile can be placed without overlap; Constraint: No two tiles can overlap,"A node for each tile variable, and an edge between any two nodes that represent tiles that cannot be placed in overlapping positions."
2/14/23 13:29,njp84@drexel.edu,njp84,Nick Pohwat,Variables: The possible places within the room to put the tiles. --- Domains: The tile sizes --- Constraints: No tiles overlap one another,Each node of the graph would be the location where tiles could be placed within the room. They will have edges to each adjacent place within room that a tile could be placed. 
2/14/23 13:29,dql27@drexel.edu,dql27,Dexter Le,"variables: (x,y) (coordinates system), Domains: {0,1}, you can be an item placed or none. The constraints would be that for all x, y, there may not be any overlaps such that (xi,yi) =/= (xj,yj) where i and j are the subscripts for an arbitrary object from a set of the coordinates.",graph that represents the vertices of the tiles within the room
2/14/23 13:29,naa92@drexel.edu,naa92,Nyemike Atoh,Variables = All Tiles; Domain = The size of tiles; Constraints = No point of a tile should be within the area of another,sudoku
2/14/23 13:29,vgm26@drexel.edu,vgm26,Victoria Mortensen,"Variables: The different tiles (set of 4 vertices of tiles(values)) Domains: Location of tiles / Constraints: Adjacent rectangles can not overlap, no two tiles ",(Continuous no specific place tiles have to go) A Binary constraint graph
2/14/23 13:29,fa484@drexel.edu,fa484,Fahid Abdullah,"Variables: each tile as a set of vertices in a tile, Domains: sizes of all tiles, edges of all tiles, Constraint: Two tiles cannot overlap.",Use a graph where each node is a tile and adjacent tiles do not overlap.
2/14/23 13:30,as5429@drexel.edu,as5429,Aneesh Sahu,"variables: (the tiles), domain : (verices of the tiles), constaint : No two tiles can overlap, all space on the floor is filled. ",Super complex as it is a continuous problem. 
2/14/23 13:30,sb4255@drexel.edu,sb4255,Salamata Bah,Variables: vertices of the tiles     Domains: where the tiles are being placed  Constraints: two tiles cannot collapse ,CSP graph would have nodes as tiles and edges will be the location of the tiles
2/14/23 13:30,ku48@drexel.edu,ku48,Kobe Uytiepo,"Variables: The set of vertices of the tile; Domains: Values set for the vertices; Constraints: Tiles cannot have a value that is also possessed by another tile, this implies overlap.",Binary CSP Graph where the node represents the tile and the arcs represent the values of their vertices and if they are overlapping or not
2/14/23 13:30,kp926@drexel.edu,kp926,Kleisi Parllaku,"Variable: the size of the tiles (vertices 4) ,  Domain: any value of number of vetices Constraints: location where to place the tiles and tiles not overlapping",The different tile sizes represent the nodes and the neighbor tiles will be the child of that node
2/14/23 13:30,ar3638@drexel.edu,ar3638,Abhash Rajbhandari,"Variable: 4 Vertices of the tile, Orientation, and Location Domains: Tile size, Constraint: Location of the tile placement, No two tiles can overlap",The different tile sizes are the nodes. The neighbor tiles are the 
2/14/23 13:33,em3223@drexel.edu,em3223,Erin McGlew,"Variables: The tiles (these can be represented as a set of vertices where each rectangular tile has 4 vertices). Domains: The domains would be where you can place the vertices for each tile. Constraints: Place tiles so that none of them overlap (avoid overlapping vertices). Given a row of tiles on a wall of the room, none of them can overlap. Similarly, given a column of tiles on a wall of the room, none of them can overlap.) With these constraints, you’ll be able to place all tiles in the room so no two tiles overlap. Note: It could be possible that we have more tiles than space and cannot meet the constraint.",The nodes of the constraint graph would be the tiles (the different vertices) while the arcs could be used to represent the constraints. 
2/14/23 20:46,ht369@drexel.edu,ht369,Hasham Tanveer,"Variables: Let the rectangular room be divided into a grid of cells. We can represent each cell by a variable X_i,j where i represents the row number and j represents the column number. The value of each variable will be the size of the tile that will be placed in the corresponding cell. Domains: The domain of each variable X_i,j will be the set of all possible sizes of tiles that can be placed in the corresponding cell. For example, if the size of the cell is 2 x 2, the domain of X_1,1 can be {1x1, 1x2, 2x1, 2x2}. Constraints: The constraints can be formulated as follows: 1. No overlap constraint 2. Tile size constraint  3. Boundary constraint","In the CSP, the nodes of the graph will represent the variables X_i,j. The edges of the graph will represent the constraints between variables. The constraints in the CSP are the no-overlap constraint, the tile size constraint, and the boundary constraint."
2/15/23 16:19,qtn35@drexel.edu,qtn35,mathilda nguyen,variables: tiles; domains: room; constraints: room,connective??